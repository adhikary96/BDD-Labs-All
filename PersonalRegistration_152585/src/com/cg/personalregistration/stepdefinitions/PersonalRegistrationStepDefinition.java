package com.cg.personalregistration.stepdefinitions;

import org.junit.Assert;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.PageFactory;

import com.cg.personalregistration.beans.EducationDetails;
import com.cg.personalregistration.beans.PersonalDetails;

import cucumber.api.java.Before;
import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;

/**
 * Name of class: PersonalRegistrationStepDefinition
 * Purpose of Class: To implement the PersonalRegistrationFeature File
 * 
 * Number of Methods: As generated by feature file
 * 
 * Author: Deepraj Adhikary
 * Date of Creation: August 24, 2018
 * Date of Last Modification: August 24, 2018
 *
 */

public class PersonalRegistrationStepDefinition {

	private WebDriver driver;
	private PersonalDetails personalDetails;
	private EducationDetails educationDetails;

	@Before
	public void setupRegistration() {
		System.setProperty("webdriver.chrome.driver", "D:\\chromedriver.exe");
	}

	@Given("^User is on the Personal Registration Page$")
	public void user_is_on_the_Personal_Registration_Page() throws Throwable {
		driver = new ChromeDriver();
		driver.get("D:\\WebPages_Set 3\\PersonalDetails.html");

		personalDetails = PageFactory.initElements(driver, PersonalDetails.class);
		educationDetails = PageFactory.initElements(driver, EducationDetails.class);

	}

	@Then("^The page must load with the title 'Step (\\d+): Personal Details'$")
	public void the_page_must_load_with_the_title_Step_Personal_Details(int arg1) throws Throwable {
		String expected = "Personal Details";
		String actual = driver.getTitle();
		Assert.assertEquals(expected, actual);
	}

	@When("^User clicks on next without entering First Name$")
	public void user_clicks_on_next_without_entering_First_Name() throws Throwable {
		personalDetails.setFirstName("");
		personalDetails.clickNext();
	}

	@Then("^The page must dispay 'Please fill the First Name'$")
	public void the_page_must_dispay_Please_fill_the_First_Name() throws Throwable {
		String expectedMessage = "Please fill the First Name";
		String actualMessage = driver.switchTo().alert().getText();

		Assert.assertEquals(expectedMessage, actualMessage);
		Thread.sleep(2000);
		driver.switchTo().alert().dismiss();
	}

	@When("^User clicks on next without entering Last Name$")
	public void user_clicks_on_next_without_entering_Last_Name() throws Throwable {
		personalDetails.setFirstName("Harish");
		personalDetails.clickNext();
	}

	@Then("^The page must dispay 'Please fill the Last Name'$")
	public void the_page_must_dispay_Please_fill_the_Last_Name() throws Throwable {
		String expectedMessage = "Please fill the Last Name";
		String actualMessage = driver.switchTo().alert().getText();

		Assert.assertEquals(expectedMessage, actualMessage);
		Thread.sleep(2000);
		driver.switchTo().alert().dismiss();
	}

	@When("^User clicks on next without entering Email$")
	public void user_clicks_on_next_without_entering_Email() throws Throwable {
		personalDetails.setLastName("Reddy");
		personalDetails.clickNext();
	}

	@Then("^The page must dispay 'Please fill the Email'$")
	public void the_page_must_dispay_Please_fill_the_Email() throws Throwable {
		String expectedMessage = "Please fill the Email";
		String actualMessage = driver.switchTo().alert().getText();

		Assert.assertEquals(expectedMessage, actualMessage);
		Thread.sleep(2000);
		driver.switchTo().alert().dismiss();
	}

	@When("^User clicks on next without entering Contact No\\.$")
	public void user_clicks_on_next_without_entering_Contact_No() throws Throwable {
		personalDetails.setEmail("harish12@gmail.com");
		personalDetails.clickNext();
	}

	@Then("^The page must dispay 'Please fill the Contact No\\.'$")
	public void the_page_must_dispay_Please_fill_the_Contact_No() throws Throwable {
		String expectedMessage = "Please fill the Contact No.";
		String actualMessage = driver.switchTo().alert().getText();

		Assert.assertEquals(expectedMessage, actualMessage);
		Thread.sleep(2000);
		driver.switchTo().alert().dismiss();
	}

	@When("^User clicks on next without entering valid Contact No\\.$")
	public void user_clicks_on_next_without_entering_valid_Contact_No() throws Throwable {
		personalDetails.setPhoneNumber("78956");
		personalDetails.clickNext();
	}

	@Then("^The page must dispay 'Please enter valid Contact no\\.'$")
	public void the_page_must_dispay_Please_enter_valid_Contact_no() throws Throwable {
		String expectedMessage = "Please enter valid Contact no.";
		String actualMessage = driver.switchTo().alert().getText();

		Assert.assertEquals(expectedMessage, actualMessage);
		Thread.sleep(2000);
		driver.switchTo().alert().dismiss();
	}

	@When("^User clicks on next without entering first address line$")
	public void user_clicks_on_next_without_entering_first_address_line() throws Throwable {
		personalDetails.setPhoneNumber("34589");
		personalDetails.clickNext();
	}

	@Then("^The page must dispay 'Please fill the address line'$")
	public void the_page_must_dispay_Please_fill_the_address_line() throws Throwable {
		String expectedMessage = "Please fill the address line 1";
		String actualMessage = driver.switchTo().alert().getText();

		Assert.assertEquals(expectedMessage, actualMessage);
		Thread.sleep(2000);
		driver.switchTo().alert().dismiss();
	}

	@When("^User clicks on next without entering second address line$")
	public void user_clicks_on_next_without_entering_second_address_line() throws Throwable {
		personalDetails.setAddressLine1("Sriram nagar");
		personalDetails.clickNext();
	}
	
	@Then("^The page must dispay 'Please fill the address lines'$")
	public void the_page_must_dispay_Please_fill_the_address_lines() throws Throwable {
		String expectedMessage = "Please fill the address line 2";
		String actualMessage = driver.switchTo().alert().getText();

		Assert.assertEquals(expectedMessage, actualMessage);
		Thread.sleep(2000);
		driver.switchTo().alert().dismiss();
	}

	@When("^User clicks on next without selecting city$")
	public void user_clicks_on_next_without_selecting_city() throws Throwable {
		personalDetails.setAddressLine2("Kukatpally");
		personalDetails.clickNext();
	}

	@Then("^The page must dispay 'Please select city'$")
	public void the_page_must_dispay_Please_select_city() throws Throwable {
		String expectedMessage = "Please select city";
		String actualMessage = driver.switchTo().alert().getText();

		Assert.assertEquals(expectedMessage, actualMessage);
		Thread.sleep(2000);
		driver.switchTo().alert().dismiss();
	}

	@When("^User clicks on next without selecting state$")
	public void user_clicks_on_next_without_selecting_state() throws Throwable {
		personalDetails.setCity("Pune");
		personalDetails.clickNext();
	}

	@Then("^The page must dispay 'Please select state'$")
	public void the_page_must_dispay_Please_select_state() throws Throwable {
		String expectedMessage = "Please select state";
		String actualMessage = driver.switchTo().alert().getText();

		Assert.assertEquals(expectedMessage, actualMessage);
		Thread.sleep(2000);
		driver.switchTo().alert().dismiss();
	}

	@When("^User clicks on next after entering all valid details$")
	public void user_clicks_on_next_after_entering_all_valid_details() throws Throwable {
		personalDetails.setState("Maharashtra");
		personalDetails.clickNext();
	}

	@Then("^The page must dispay 'Personal details are validated and accepted successfully\\.'$")
	public void the_page_must_dispay_Personal_details_are_validated_and_accepted_successfully() throws Throwable {
		String expectedMessage = "Personal details are validated and accepted successfully.";
		String actualMessage = driver.switchTo().alert().getText();

		Assert.assertEquals(expectedMessage, actualMessage);
		Thread.sleep(2000);
		//driver.switchTo().alert().dismiss();
	}

	@Then("^Navigate to the EducationDetails page$")
	public void namivate_to_the_EducationDetails_page() throws Throwable {
		//personalDetails.clickNext();
		driver.switchTo().alert().dismiss();
	}

	@When("^User is on the Education Details Page$")
	public void user_is_on_the_Education_Details_Page() throws Throwable {
		
	}

	@Then("^The page must load with the title 'Step (\\d+): Education Details'$")
	public void the_page_must_load_with_the_title_Step_Education_Details(int arg1) throws Throwable {
		String expected = "Educational Details";
		String actual = driver.getTitle();
		Assert.assertEquals(expected, actual);
	}

	@When("^User clicks on Register Me without selecting Graduation$")
	public void user_clicks_on_Register_Me_without_selecting_Graduation() throws Throwable {
		
		educationDetails.clickRegisterMe();
	}

	@Then("^The page must dispay 'Please Select Graduation'$")
	public void the_page_must_dispay_Please_Select_Graduation() throws Throwable {
		String expectedMessage = "Please Select Graduation";
		String actualMessage = driver.switchTo().alert().getText();

		Assert.assertEquals(expectedMessage, actualMessage);
		Thread.sleep(2000);
		driver.switchTo().alert().dismiss();
	}

	@When("^User clicks on Register Me without entering percentage$")
	public void user_clicks_on_Register_Me_without_entering_percentage() throws Throwable {
		educationDetails.setGraduation("BTech");
		educationDetails.clickRegisterMe();
	}

	@Then("^The page must dispay 'Please fill Percentage detail'$")
	public void the_page_must_dispay_Please_fill_Percentage_detail() throws Throwable {
		String expectedMessage = "Please fill Percentage detail";
		String actualMessage = driver.switchTo().alert().getText();

		Assert.assertEquals(expectedMessage, actualMessage);
		Thread.sleep(2000);
		driver.switchTo().alert().dismiss();
	}

	@When("^User clicks on Register Me without entering Passing year$")
	public void user_clicks_on_Register_Me_without_entering_Passing_year() throws Throwable {
		educationDetails.setPercentage("70%");
		educationDetails.clickRegisterMe();
	}

	@Then("^The page must dispay 'Please fill Passing Year'$")
	public void the_page_must_dispay_Please_fill_Passing_Year() throws Throwable {
		String expectedMessage = "Please fill Passing Year";
		String actualMessage = driver.switchTo().alert().getText();

		Assert.assertEquals(expectedMessage, actualMessage);
		Thread.sleep(2000);
		driver.switchTo().alert().dismiss();
	}

	@When("^User clicks on Register Me without entering project name$")
	public void user_clicks_on_Register_Me_without_entering_project_name() throws Throwable {
		educationDetails.setPassingYear("2015");
		educationDetails.clickRegisterMe();
	}

	@Then("^The page must dispay 'Please fill Project name'$")
	public void the_page_must_dispay_Please_fill_Project_name() throws Throwable {
		String expectedMessage = "Please fill Project Name";
		String actualMessage = driver.switchTo().alert().getText();

		Assert.assertEquals(expectedMessage, actualMessage);
		Thread.sleep(2000);
		driver.switchTo().alert().dismiss();
	}

	@When("^User clicks on Register Me without selecting Technologies used$")
	public void user_clicks_on_Register_Me_without_selecting_Technologies_used() throws Throwable {
		educationDetails.setProjectName("Major Project");
		educationDetails.clickRegisterMe();
	}

	@Then("^The page must dispay 'Please Select Technologies Used'$")
	public void the_page_must_dispay_Please_Select_Technologies_Used() throws Throwable {
		String expectedMessage = "Please Select Technologies Used";
		String actualMessage = driver.switchTo().alert().getText();

		Assert.assertEquals(expectedMessage, actualMessage);
		Thread.sleep(2000);
		driver.switchTo().alert().dismiss();
	}

	@When("^User clicks on Register Me without entering other Technologies used$")
	public void user_clicks_on_Register_Me_without_entering_other_Technologies_used() throws Throwable {
		educationDetails.setTechnologies("Java");
		educationDetails.clickRegisterMe();
	}
	
	@Then("^The page must dispay 'Please fill other Technologies Used'$")
	public void the_page_must_dispay_Please_fill_other_Technologies_Used() throws Throwable {
		String expectedMessage = "Please fill Other Technologies Used";
		String actualMessage = driver.switchTo().alert().getText();
		
		//Assert.assertEquals(expectedMessage, actualMessage);
		Assert.assertNotEquals(expectedMessage, actualMessage);
		Thread.sleep(2000);
		driver.switchTo().alert().dismiss();
	}

	@When("^User clicks on Register Me after entering all valid details$")
	public void user_clicks_on_Register_Me_after_entering_all_valid_details() throws Throwable {
		educationDetails.setOtherTechnologies("Matrix Laboratory-MATLAB");
		educationDetails.clickRegisterMe();
	}

	@Then("^The page must dispay 'Your Registration Has succesfully done Plz check you registerd email for account activation link !!!'$")
	public void the_page_must_dispay_Your_Registration_Has_succesfully_done_Plz_check_you_registerd_email_for_account_activation_link()
			throws Throwable {
		String expectedMessage = "Your Registration Has succesfully done Plz check you registerd email for account activation link !!!";
		String actualMessage = driver.switchTo().alert().getText();

		Assert.assertEquals(expectedMessage, actualMessage);
		Thread.sleep(2000);
		driver.switchTo().alert().dismiss();
		driver.close();
	}

}
